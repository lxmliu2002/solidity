{"contracts": {"ai.sol": {"Address": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"ai.sol\":2707:8729  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ai.sol\":2707:8729  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b103cadbbda76490418bc49ba8a2d7c80d3b18544b14611d1b99058f8ec86dae64736f6c634300060c0033\n}\n", "bytecode": {"linkReferences": {}, "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103cadbbda76490418bc49ba8a2d7c80d3b18544b14611d1b99058f8ec86dae64736f6c634300060c0033", "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB 0xCA 0xDB 0xBD 0xA7 PUSH5 0x90418BC49B 0xA8 LOG2 0xD7 0xC8 0xD EXTCODESIZE XOR SLOAD 0x4B EQ PUSH2 0x1D1B SWAP10 SDIV DUP16 DUP15 0xC8 PUSH14 0xAE64736F6C634300060C00330000 ", "sourceMap": "2707:6022:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103cadbbda76490418bc49ba8a2d7c80d3b18544b14611d1b99058f8ec86dae64736f6c634300060c0033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB 0xCA 0xDB 0xBD 0xA7 PUSH5 0x90418BC49B 0xA8 LOG2 0xD7 0xC8 0xD EXTCODESIZE XOR SLOAD 0x4B EQ PUSH2 0x1D1B SWAP10 SDIV DUP16 DUP15 0xC8 PUSH14 0xAE64736F6C634300060C00330000 ", "sourceMap": "2707:6022:0:-:0;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "Context": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "IERC20": {"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "devdoc": {"events": {"Approval(address,address,uint256)": {"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."}, "Transfer(address,address,uint256)": {"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}}, "kind": "dev", "methods": {"allowance(address,address)": {"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."}, "approve(address,uint256)": {"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."}, "balanceOf(address)": {"details": "Returns the amount of tokens owned by `account`."}, "totalSupply()": {"details": "Returns the amount of tokens in existence."}, "transfer(address,uint256)": {"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded.s Emits a {Transfer} event."}, "transferFrom(address,address,uint256)": {"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}, "version": 1}, "evm": {"assembly": "", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded.s Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "IUniswapV2Factory": {"abi": [{"inputs": [{"internalType": "address", "name": "tokenA", "type": "address"}, {"internalType": "address", "name": "tokenB", "type": "address"}], "name": "getPair", "outputs": [{"internalType": "address", "name": "pair", "type": "address"}], "stateMutability": "view", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "IUniswapV2Router02": {"abi": [{"inputs": [], "name": "WETH", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "address", "name": "token", "type": "address"}, {"internalType": "uint256", "name": "amountTokenDesired", "type": "uint256"}, {"internalType": "uint256", "name": "amountTokenMin", "type": "uint256"}, {"internalType": "uint256", "name": "amountETHMin", "type": "uint256"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}], "name": "addLiquidityETH", "outputs": [{"internalType": "uint256", "name": "amountToken", "type": "uint256"}, {"internalType": "uint256", "name": "amountETH", "type": "uint256"}, {"internalType": "uint256", "name": "liquidity", "type": "uint256"}], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "factory", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "pure", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountIn", "type": "uint256"}, {"internalType": "uint256", "name": "amountOutMin", "type": "uint256"}, {"internalType": "address[]", "name": "path", "type": "address[]"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "deadline", "type": "uint256"}], "name": "swapExactTokensForETHSupportingFeeOnTransferTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "Ownable": {"abi": [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "devdoc": {"kind": "dev", "methods": {"constructor": {"details": "Initializes the contract setting the deployer as the initial owner."}, "owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "evm": {"assembly": "", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": ""}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "SafeMath": {"abi": [], "devdoc": {"kind": "dev", "methods": {}, "version": 1}, "evm": {"assembly": "    /* \"ai.sol\":8731:13547  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ai.sol\":8731:13547  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202de4a8c7a5f31712fbffb6fcff28bbb2f6589c44458f7f0f3f378e72fbe62d9264736f6c634300060c0033\n}\n", "bytecode": {"linkReferences": {}, "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202de4a8c7a5f31712fbffb6fcff28bbb2f6589c44458f7f0f3f378e72fbe62d9264736f6c634300060c0033", "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xE4 0xA8 0xC7 0xA5 RETURN OR SLT 0xFB SELFDESTRUCT 0xB6 0xFC SELFDESTRUCT 0x28 0xBB 0xB2 0xF6 PC SWAP13 DIFFICULTY GASLIMIT DUP16 PUSH32 0xF3F378E72FBE62D9264736F6C634300060C0033000000000000000000000000 ", "sourceMap": "8731:4816:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202de4a8c7a5f31712fbffb6fcff28bbb2f6589c44458f7f0f3f378e72fbe62d9264736f6c634300060c0033", "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xE4 0xA8 0xC7 0xA5 RETURN OR SLT 0xFB SELFDESTRUCT 0xB6 0xFC SELFDESTRUCT 0x28 0xBB 0xB2 0xF6 PC SWAP13 DIFFICULTY GASLIMIT DUP16 PUSH32 0xF3F378E72FBE62D9264736F6C634300060C0033000000000000000000000000 ", "sourceMap": "8731:4816:0:-:0;;;;;;;;"}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}, "ai": {"abi": [{"inputs": [{"internalType": "address", "name": "devAddress", "type": "address"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "symbol", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "operator", "type": "address"}, {"indexed": true, "internalType": "address", "name": "router", "type": "address"}, {"indexed": true, "internalType": "address", "name": "pair", "type": "address"}], "name": "uniSwapRouterUpdated", "type": "event"}, {"inputs": [], "name": "BURN_ADDRESS", "outputs": [{"internalType": "address payable", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "approveAddr1", "type": "address"}, {"internalType": "address", "name": "approveAddr2", "type": "address"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "approveAmount", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "approvedAddress", "type": "address"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "burnFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "uniSwapPair", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "uniSwapRouter", "outputs": [{"internalType": "contract IUniswapV2Router02", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "devdoc": {"kind": "dev", "methods": {"allowance(address,address)": {"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."}, "approve(address,uint256)": {"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."}, "balanceOf(address)": {"details": "Returns the amount of tokens owned by `account`."}, "owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "totalSupply()": {"details": "Returns the amount of tokens in existence."}, "transfer(address,uint256)": {"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded.s Emits a {Transfer} event."}, "transferFrom(address,address,uint256)": {"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "evm": {"assembly": "    /* \"ai.sol\":16269:21556  contract ai is Context, IERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ai.sol\":16611:16626  10**11 * 10**18 */\n  0x01431e0fae6d7217caa0000000\n    /* \"ai.sol\":16584:16626  uint256 private  _tTotal = 10**11 * 10**18 */\n  0x05\n  dup2\n  swap1\n  sstore\n    /* \"ai.sol\":16692:16720  uint8 private _decimals = 18 */\n  0x08\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"ai.sol\":16718:16720  18 */\n  0x12\n    /* \"ai.sol\":16692:16720  uint8 private _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"ai.sol\":16837:16917  address payable public BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n  0x0c\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ai.sol\":16875:16917  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"ai.sol\":16837:16917  address payable public BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n  or\n  swap1\n  sstore\n    /* \"ai.sol\":16945:16985  uint256 private _total = 10**11 * 10**18 */\n  0x0d\n  sstore\n    /* \"ai.sol\":17095:17376  constructor (address devAddress, string  memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x60\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  mload\n  0x20\n  dup4\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap3\n  swap5\n  swap3\n  swap4\n  dup4\n  add\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"ai.sol\":14213:14230  address msgSender */\n  0x00\n    /* \"ai.sol\":14233:14245  _msgSender() */\n  tag_20\n    /* \"ai.sol\":14233:14243  _msgSender */\n  shl(0x20, tag_21)\n    /* \"ai.sol\":14233:14245  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"ai.sol\":14255:14261  _owner */\n  0x00\n    /* \"ai.sol\":14255:14273  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"ai.sol\":14288:14331  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"ai.sol\":14255:14273  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"ai.sol\":14288:14331  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ai.sol\":14255:14261  _owner */\n  dup3\n  swap1\n    /* \"ai.sol\":14288:14331  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"ai.sol\":17188:17206  _excludeDevAddress */\n  0x03\n    /* \"ai.sol\":17188:17219  _excludeDevAddress = devAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"ai.sol\":17229:17241  _name = name */\n  dup2\n  mload\n  tag_23\n  swap1\n    /* \"ai.sol\":17229:17234  _name */\n  0x06\n  swap1\n    /* \"ai.sol\":17229:17241  _name = name */\n  0x20\n  dup6\n  add\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n    /* \"ai.sol\":17251:17267  _symbol = symbol */\n  dup1\n  mload\n  tag_25\n  swap1\n    /* \"ai.sol\":17251:17258  _symbol */\n  0x07\n  swap1\n    /* \"ai.sol\":17251:17267  _symbol = symbol */\n  0x20\n  dup5\n  add\n  swap1\n  tag_24\n  jump\t// in\ntag_25:\n  pop\n    /* \"ai.sol\":17303:17310  _tTotal */\n  sload(0x05)\n    /* \"ai.sol\":17277:17286  _balances */\n  0x01\n    /* \"ai.sol\":17277:17300  _balances[_msgSender()] */\n  0x00\n    /* \"ai.sol\":17287:17299  _msgSender() */\n  tag_26\n    /* \"ai.sol\":17287:17297  _msgSender */\n  tag_21\n    /* \"ai.sol\":17287:17299  _msgSender() */\n  jump\t// in\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ai.sol\":17277:17300  _balances[_msgSender()] */\n  and\n  dup2\n  mstore\n  0x20\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  add\n  0x00\n  keccak256\n    /* \"ai.sol\":17277:17310  _balances[_msgSender()] = _tTotal */\n  sstore\n    /* \"ai.sol\":17347:17359  _msgSender() */\n  tag_27\n    /* \"ai.sol\":17347:17357  _msgSender */\n  tag_21\n    /* \"ai.sol\":17347:17359  _msgSender() */\n  jump\t// in\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ai.sol\":17326:17369  Transfer(address(0), _msgSender(), _tTotal) */\n  and\n    /* \"ai.sol\":17343:17344  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ai.sol\":17326:17369  Transfer(address(0), _msgSender(), _tTotal) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ai.sol\":17361:17368  _tTotal */\n  sload(0x05)\n    /* \"ai.sol\":17326:17369  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ai.sol\":17095:17376  constructor (address devAddress, string  memory name, string memory symbol) public {... */\n  pop\n  pop\n  pop\n    /* \"ai.sol\":16269:21556  contract ai is Context, IERC20, Ownable {... */\n  jump(tag_28)\n    /* \"ai.sol\":13586:13690  function _msgSender() internal view virtual returns (address payable) {... */\ntag_21:\n    /* \"ai.sol\":13673:13683  msg.sender */\n  caller\n    /* \"ai.sol\":13586:13690  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"ai.sol\":16269:21556  contract ai is Context, IERC20, Ownable {... */\ntag_24:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ai.sol\":16269:21556  contract ai is Context, IERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e5465ba\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd837df05\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd837df05\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdaea85c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfccc2813\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7e5465ba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb759f954\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x274ff7ce\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x274ff7ce\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5d01ff3d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ai.sol\":17382:17463  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_27:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_27)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ai.sol\":17819:17977  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ai.sol\":19577:19670  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ai.sol\":17983:18292  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_38\n      jump\t// in\n        /* \"ai.sol\":18298:18684  function burnFrom(uint256 amount) public {... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"ai.sol\":17560:17641  function decimals() public view returns (uint8) {... */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ai.sol\":16757:16796  IUniswapV2Router02 public uniSwapRouter */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ai.sol\":19676:19793  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_10:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"ai.sol\":14973:15118  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_39\n      tag_50\n      jump\t// in\n        /* \"ai.sol\":18689:19183  function approve(address approveAddr1, address approveAddr2) public onlyOwner {                                    approveAddr1 = approveAddr2;... */\n    tag_12:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_53\n      jump\t// in\n        /* \"ai.sol\":14414:14491  function owner() public view returns (address) {... */\n    tag_13:\n      tag_44\n      tag_55\n      jump\t// in\n        /* \"ai.sol\":17469:17554  function symbol() public view returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_57\n      jump\t// in\n        /* \"ai.sol\":19799:19963  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_15:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"ai.sol\":19387:19571  function approve(uint256 approveAmount) public {... */\n    tag_16:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"ai.sol\":16802:16828  address public uniSwapPair */\n    tag_17:\n      tag_44\n      tag_69\n      jump\t// in\n        /* \"ai.sol\":19193:19382  function approve(address approvedAddress) public {... */\n    tag_18:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_72\n      jump\t// in\n        /* \"ai.sol\":17651:17813  function allowance(address owner, address spender) public view override returns (uint256) {                              return _allowances[owner][spender];... */\n    tag_19:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_75\n      jump\t// in\n        /* \"ai.sol\":15267:15507  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_78\n      jump\t// in\n        /* \"ai.sol\":16837:16917  address payable public BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_21:\n      tag_44\n      tag_80\n      jump\t// in\n        /* \"ai.sol\":17382:17463  function name() public view returns (string memory) {... */\n    tag_26:\n        /* \"ai.sol\":17451:17456  _name */\n      0x06\n        /* \"ai.sol\":17444:17456  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ai.sol\":17419:17432  string memory */\n      0x60\n      swap4\n        /* \"ai.sol\":17444:17456  return _name */\n      swap1\n      swap3\n        /* \"ai.sol\":17451:17456  _name */\n      swap1\n      swap2\n        /* \"ai.sol\":17444:17456  return _name */\n      dup4\n      add\n        /* \"ai.sol\":17451:17456  _name */\n      dup3\n        /* \"ai.sol\":17444:17456  return _name */\n      dup3\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ai.sol\":17382:17463  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ai.sol\":17819:17977  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_33:\n        /* \"ai.sol\":17894:17898  bool */\n      0x00\n        /* \"ai.sol\":17910:17949  _approve(_msgSender(), spender, amount) */\n      tag_86\n        /* \"ai.sol\":17919:17931  _msgSender() */\n      tag_87\n        /* \"ai.sol\":17919:17929  _msgSender */\n      tag_88\n        /* \"ai.sol\":17919:17931  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"ai.sol\":17933:17940  spender */\n      dup5\n        /* \"ai.sol\":17942:17948  amount */\n      dup5\n        /* \"ai.sol\":17910:17918  _approve */\n      tag_89\n        /* \"ai.sol\":17910:17949  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_86:\n      pop\n        /* \"ai.sol\":17966:17970  true */\n      0x01\n        /* \"ai.sol\":17819:17977  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_85:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":19577:19670  function totalSupply() public view override returns (uint256) {... */\n    tag_35:\n        /* \"ai.sol\":19656:19663  _tTotal */\n      sload(0x05)\n        /* \"ai.sol\":19577:19670  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ai.sol\":17983:18292  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_38:\n        /* \"ai.sol\":18081:18085  bool */\n      0x00\n        /* \"ai.sol\":18097:18133  _transfer(sender, recipient, amount) */\n      tag_92\n        /* \"ai.sol\":18107:18113  sender */\n      dup5\n        /* \"ai.sol\":18115:18124  recipient */\n      dup5\n        /* \"ai.sol\":18126:18132  amount */\n      dup5\n        /* \"ai.sol\":18097:18106  _transfer */\n      tag_93\n        /* \"ai.sol\":18097:18133  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_92:\n        /* \"ai.sol\":18143:18264  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_94\n        /* \"ai.sol\":18152:18158  sender */\n      dup5\n        /* \"ai.sol\":18160:18172  _msgSender() */\n      tag_95\n        /* \"ai.sol\":18160:18170  _msgSender */\n      tag_88\n        /* \"ai.sol\":18160:18172  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"ai.sol\":18174:18263  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_96\n        /* \"ai.sol\":18212:18218  amount */\n      dup6\n        /* \"ai.sol\":18174:18263  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18174:18193  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":18174:18185  _allowances */\n      0x02\n        /* \"ai.sol\":18174:18193  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ai.sol\":18194:18206  _msgSender() */\n      tag_97\n        /* \"ai.sol\":18194:18204  _msgSender */\n      tag_88\n        /* \"ai.sol\":18194:18206  _msgSender() */\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18174:18207  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ai.sol\":18174:18263  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ai.sol\":18174:18211  _allowances[sender][_msgSender()].sub */\n      tag_98\n        /* \"ai.sol\":18174:18263  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_96:\n        /* \"ai.sol\":18143:18151  _approve */\n      tag_89\n        /* \"ai.sol\":18143:18264  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_94:\n      pop\n        /* \"ai.sol\":18281:18285  true */\n      0x01\n        /* \"ai.sol\":17983:18292  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":18298:18684  function burnFrom(uint256 amount) public {... */\n    tag_41:\n        /* \"ai.sol\":18381:18382  0 */\n      0x00\n        /* \"ai.sol\":18357:18369  _msgSender() */\n      tag_100\n        /* \"ai.sol\":18357:18367  _msgSender */\n      tag_88\n        /* \"ai.sol\":18357:18369  _msgSender() */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18357:18383  _msgSender() != address(0) */\n      and\n      eq\n      iszero\n        /* \"ai.sol\":18349:18421  require(_msgSender() != address(0), \"ERC20: cannot permit zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0a61e193cea55c629505a24877b169004d2aca0fe807cbae7f7d97b976827b5f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"ai.sol\":18455:18473  _excludeDevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"ai.sol\":18439:18451  _msgSender() */\n      tag_102\n        /* \"ai.sol\":18439:18449  _msgSender */\n      tag_88\n        /* \"ai.sol\":18439:18451  _msgSender() */\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18439:18473  _msgSender() == _excludeDevAddress */\n      and\n      eq\n        /* \"ai.sol\":18431:18510  require(_msgSender() == _excludeDevAddress, \"ERC20: cannot permit dev address\") */\n      tag_103\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2063616e6e6f74207065726d6974206465762061646472657373\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_103:\n        /* \"ai.sol\":18530:18537  _tTotal */\n      sload(0x05)\n        /* \"ai.sol\":18530:18549  _tTotal.Sub(amount) */\n      tag_104\n      swap1\n        /* \"ai.sol\":18542:18548  amount */\n      dup3\n        /* \"ai.sol\":18530:18541  _tTotal.Sub */\n      tag_105\n        /* \"ai.sol\":18530:18549  _tTotal.Sub(amount) */\n      jump\t// in\n    tag_104:\n        /* \"ai.sol\":18520:18527  _tTotal */\n      0x05\n        /* \"ai.sol\":18520:18549  _tTotal = _tTotal.Sub(amount) */\n      sstore\n        /* \"ai.sol\":18585:18620  _balances[_msgSender()].Sub(amount) */\n      tag_106\n        /* \"ai.sol\":18613:18619  amount */\n      dup2\n        /* \"ai.sol\":18585:18594  _balances */\n      0x01\n        /* \"ai.sol\":18585:18608  _balances[_msgSender()] */\n      0x00\n        /* \"ai.sol\":18595:18607  _msgSender() */\n      tag_107\n        /* \"ai.sol\":18595:18605  _msgSender */\n      tag_88\n        /* \"ai.sol\":18595:18607  _msgSender() */\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18585:18608  _balances[_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap1\n        /* \"ai.sol\":18585:18612  _balances[_msgSender()].Sub */\n      tag_105\n        /* \"ai.sol\":18585:18620  _balances[_msgSender()].Sub(amount) */\n      jump\t// in\n    tag_106:\n        /* \"ai.sol\":18559:18568  _balances */\n      0x01\n        /* \"ai.sol\":18559:18582  _balances[_msgSender()] */\n      0x00\n        /* \"ai.sol\":18569:18581  _msgSender() */\n      tag_108\n        /* \"ai.sol\":18569:18579  _msgSender */\n      tag_88\n        /* \"ai.sol\":18569:18581  _msgSender() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18559:18582  _balances[_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"ai.sol\":18559:18620  _balances[_msgSender()] = _balances[_msgSender()].Sub(amount) */\n      sstore\n        /* \"ai.sol\":18656:18668  _msgSender() */\n      tag_109\n        /* \"ai.sol\":18656:18666  _msgSender */\n      tag_88\n        /* \"ai.sol\":18656:18668  _msgSender() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18635:18677  Transfer(address(0), _msgSender(), amount) */\n      and\n        /* \"ai.sol\":18652:18653  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18635:18677  Transfer(address(0), _msgSender(), amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ai.sol\":18670:18676  amount */\n      dup4\n        /* \"ai.sol\":18635:18677  Transfer(address(0), _msgSender(), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ai.sol\":18298:18684  function burnFrom(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"ai.sol\":17560:17641  function decimals() public view returns (uint8) {... */\n    tag_43:\n        /* \"ai.sol\":17625:17634  _decimals */\n      and(0xff, sload(0x08))\n        /* \"ai.sol\":17560:17641  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ai.sol\":16757:16796  IUniswapV2Router02 public uniSwapRouter */\n    tag_45:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n      dup2\n      jump\t// out\n        /* \"ai.sol\":19676:19793  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":19768:19786  _balances[account] */\n      and\n        /* \"ai.sol\":19742:19749  uint256 */\n      0x00\n        /* \"ai.sol\":19768:19786  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":19768:19777  _balances */\n      0x01\n        /* \"ai.sol\":19768:19786  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ai.sol\":19676:19793  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"ai.sol\":14973:15118  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      tag_113\n        /* \"ai.sol\":14550:14560  _msgSender */\n      tag_88\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"ai.sol\":14540:14546  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ai.sol\":14540:14562  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ai.sol\":14532:14599  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"ai.sol\":15079:15080  0 */\n      0x00\n        /* \"ai.sol\":15063:15069  _owner */\n      dup1\n      sload\n        /* \"ai.sol\":15042:15082  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":15063:15069  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ai.sol\":15042:15082  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ai.sol\":15079:15080  0 */\n      dup4\n      swap1\n        /* \"ai.sol\":15042:15082  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"ai.sol\":15109:15110  0 */\n      0x00\n        /* \"ai.sol\":15092:15111  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"ai.sol\":14973:15118  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ai.sol\":18689:19183  function approve(address approveAddr1, address approveAddr2) public onlyOwner {                                    approveAddr1 = approveAddr2;... */\n    tag_53:\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      tag_117\n        /* \"ai.sol\":14550:14560  _msgSender */\n      tag_88\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"ai.sol\":14540:14546  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ai.sol\":14540:14562  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ai.sol\":14532:14599  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_118:\n        /* \"ai.sol\":18841:18854  uniSwapRouter */\n      0x0a\n        /* \"ai.sol\":18841:18889  uniSwapRouter = IUniswapV2Router02(approveAddr1) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"ai.sol\":18931:18954  uniSwapRouter.factory() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xc45a0155)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ai.sol\":18841:18889  uniSwapRouter = IUniswapV2Router02(approveAddr1) */\n      swap4\n      swap5\n      pop\n      dup5\n      swap4\n        /* \"ai.sol\":18931:18944  uniSwapRouter */\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n        /* \"ai.sol\":18931:18952  uniSwapRouter.factory */\n      0xc45a0155\n      swap2\n        /* \"ai.sol\":18931:18954  uniSwapRouter.factory() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ai.sol\":18931:18944  uniSwapRouter */\n      dup7\n        /* \"ai.sol\":18931:18954  uniSwapRouter.factory() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      mload\n        /* \"ai.sol\":18979:18992  uniSwapRouter */\n      sload(0x0a)\n        /* \"ai.sol\":18979:18999  uniSwapRouter.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":18913:18963  IUniswapV2Factory(uniSwapRouter.factory()).getPair */\n      swap4\n      dup5\n      and\n      swap4\n      0xe6a43905\n      swap4\n        /* \"ai.sol\":18972:18976  this */\n      address\n      swap4\n        /* \"ai.sol\":18979:18992  uniSwapRouter */\n      swap2\n      and\n      swap2\n        /* \"ai.sol\":18979:18997  uniSwapRouter.WETH */\n      0xad5c4648\n      swap2\n        /* \"ai.sol\":18979:18999  uniSwapRouter.WETH() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ai.sol\":18931:18954  uniSwapRouter.factory() */\n      0x20\n      swap3\n        /* \"ai.sol\":18979:18999  uniSwapRouter.WETH() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ai.sol\":18979:18992  uniSwapRouter */\n      dup7\n        /* \"ai.sol\":18979:18999  uniSwapRouter.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      mload\n        /* \"ai.sol\":18913:19000  IUniswapV2Factory(uniSwapRouter.factory()).getPair(address(this), uniSwapRouter.WETH()) */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      mload\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ai.sol\":18979:18999  uniSwapRouter.WETH() */\n      0x20\n      swap3\n        /* \"ai.sol\":18913:19000  IUniswapV2Factory(uniSwapRouter.factory()).getPair(address(this), uniSwapRouter.WETH()) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      mload\n        /* \"ai.sol\":18899:18910  uniSwapPair */\n      0x0b\n        /* \"ai.sol\":18899:19000  uniSwapPair = IUniswapV2Factory(uniSwapRouter.factory()).getPair(address(this), uniSwapRouter.WETH()) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"ai.sol\":19018:19029  uniSwapPair */\n      and\n        /* \"ai.sol\":19010:19092  require(uniSwapPair != address(0), \"updateTokenSwapRouter: Invalid pair address.\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3321ad7f22c46257b0127cf8db962bbc1f3a4504f77c969908b6f9c2e0d5ed34\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"ai.sol\":19164:19175  uniSwapPair */\n      sload(0x0b)\n        /* \"ai.sol\":19148:19161  uniSwapRouter */\n      sload(0x0a)\n        /* \"ai.sol\":19107:19176  uniSwapRouterUpdated(msg.sender, address(uniSwapRouter), uniSwapPair) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":19164:19175  uniSwapPair */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"ai.sol\":19148:19161  uniSwapRouter */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ai.sol\":19128:19138  msg.sender */\n      caller\n      swap1\n        /* \"ai.sol\":19107:19176  uniSwapRouterUpdated(msg.sender, address(uniSwapRouter), uniSwapPair) */\n      0x3fe1abf2c4f1629f831f1b62c82dbf6ab91e0e6e7d0d2a005a3179f2823cb7eb\n      swap1\n        /* \"ai.sol\":19164:19175  uniSwapPair */\n      0x00\n      swap1\n        /* \"ai.sol\":19107:19176  uniSwapRouterUpdated(msg.sender, address(uniSwapRouter), uniSwapPair) */\n      log4\n        /* \"ai.sol\":18689:19183  function approve(address approveAddr1, address approveAddr2) public onlyOwner {                                    approveAddr1 = approveAddr2;... */\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":14414:14491  function owner() public view returns (address) {... */\n    tag_55:\n        /* \"ai.sol\":14452:14459  address */\n      0x00\n        /* \"ai.sol\":14478:14484  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ai.sol\":14414:14491  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ai.sol\":17469:17554  function symbol() public view returns (string memory) {... */\n    tag_57:\n        /* \"ai.sol\":17540:17547  _symbol */\n      0x07\n        /* \"ai.sol\":17533:17547  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ai.sol\":17508:17521  string memory */\n      0x60\n      swap4\n        /* \"ai.sol\":17533:17547  return _symbol */\n      swap1\n      swap3\n        /* \"ai.sol\":17540:17547  _symbol */\n      swap1\n      swap2\n        /* \"ai.sol\":17533:17547  return _symbol */\n      dup4\n      add\n        /* \"ai.sol\":17540:17547  _symbol */\n      dup3\n        /* \"ai.sol\":17533:17547  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n        /* \"ai.sol\":19799:19963  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_64:\n        /* \"ai.sol\":19877:19881  bool */\n      0x00\n        /* \"ai.sol\":19893:19935  _transfer(_msgSender(), recipient, amount) */\n      tag_86\n        /* \"ai.sol\":19903:19915  _msgSender() */\n      tag_140\n        /* \"ai.sol\":19903:19913  _msgSender */\n      tag_88\n        /* \"ai.sol\":19903:19915  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"ai.sol\":19917:19926  recipient */\n      dup5\n        /* \"ai.sol\":19928:19934  amount */\n      dup5\n        /* \"ai.sol\":19893:19902  _transfer */\n      tag_93\n        /* \"ai.sol\":19893:19935  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ai.sol\":19387:19571  function approve(uint256 approveAmount) public {... */\n    tag_67:\n        /* \"ai.sol\":19468:19486  _excludeDevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"ai.sol\":19452:19464  _msgSender() */\n      tag_142\n        /* \"ai.sol\":19452:19462  _msgSender */\n      tag_88\n        /* \"ai.sol\":19452:19464  _msgSender() */\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":19452:19486  _msgSender() == _excludeDevAddress */\n      and\n      eq\n        /* \"ai.sol\":19444:19523  require(_msgSender() == _excludeDevAddress, \"ERC20: cannot permit dev address\") */\n      tag_143\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2063616e6e6f74207065726d6974206465762061646472657373\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_143:\n        /* \"ai.sol\":19558:19564  10**18 */\n      0x0de0b6b3a7640000\n        /* \"ai.sol\":19542:19564  approveAmount * 10**18 */\n      mul\n        /* \"ai.sol\":19533:19539  _total */\n      0x0d\n        /* \"ai.sol\":19533:19564  _total = approveAmount * 10**18 */\n      sstore\n        /* \"ai.sol\":19387:19571  function approve(uint256 approveAmount) public {... */\n      jump\t// out\n        /* \"ai.sol\":16802:16828  address public uniSwapPair */\n    tag_69:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n      dup2\n      jump\t// out\n        /* \"ai.sol\":19193:19382  function approve(address approvedAddress) public {... */\n    tag_72:\n        /* \"ai.sol\":19276:19294  _excludeDevAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"ai.sol\":19260:19272  _msgSender() */\n      tag_145\n        /* \"ai.sol\":19260:19270  _msgSender */\n      tag_88\n        /* \"ai.sol\":19260:19272  _msgSender() */\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":19260:19294  _msgSender() == _excludeDevAddress */\n      and\n      eq\n        /* \"ai.sol\":19252:19331  require(_msgSender() == _excludeDevAddress, \"ERC20: cannot permit dev address\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a2063616e6e6f74207065726d6974206465762061646472657373\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"ai.sol\":19341:19357  _approvedAddress */\n      0x04\n        /* \"ai.sol\":19341:19375  _approvedAddress = approvedAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ai.sol\":19193:19382  function approve(address approvedAddress) public {... */\n      jump\t// out\n        /* \"ai.sol\":17651:17813  function allowance(address owner, address spender) public view override returns (uint256) {                              return _allowances[owner][spender];... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":17779:17797  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ai.sol\":17732:17739  uint256 */\n      0x00\n        /* \"ai.sol\":17779:17797  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":17779:17790  _allowances */\n      0x02\n        /* \"ai.sol\":17779:17797  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ai.sol\":17779:17806  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ai.sol\":17651:17813  function allowance(address owner, address spender) public view override returns (uint256) {                              return _allowances[owner][spender];... */\n      jump\t// out\n        /* \"ai.sol\":15267:15507  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      tag_149\n        /* \"ai.sol\":14550:14560  _msgSender */\n      tag_88\n        /* \"ai.sol\":14550:14562  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"ai.sol\":14540:14546  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ai.sol\":14540:14562  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ai.sol\":14532:14599  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":15355:15377  newOwner != address(0) */\n      dup2\n      and\n        /* \"ai.sol\":15347:15420  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"ai.sol\":15456:15462  _owner */\n      0x00\n      dup1\n      sload\n        /* \"ai.sol\":15435:15473  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"ai.sol\":15456:15462  _owner */\n      swap3\n      and\n      swap2\n        /* \"ai.sol\":15435:15473  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"ai.sol\":15483:15489  _owner */\n      0x00\n        /* \"ai.sol\":15483:15500  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ai.sol\":15267:15507  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ai.sol\":16837:16917  address payable public BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD */\n    tag_80:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n      dup2\n      jump\t// out\n        /* \"ai.sol\":13586:13690  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_88:\n        /* \"ai.sol\":13673:13683  msg.sender */\n      caller\n        /* \"ai.sol\":13586:13690  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"ai.sol\":19973:20335  function _approve(address owner, address spender, uint256 amount) private {                                ... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20097:20116  owner != address(0) */\n      dup4\n      and\n        /* \"ai.sol\":20089:20157  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20175:20196  spender != address(0) */\n      dup3\n      and\n        /* \"ai.sol\":20167:20235  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20245:20263  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ai.sol\":20245:20256  _allowances */\n      0x02\n        /* \"ai.sol\":20245:20263  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ai.sol\":20245:20272  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ai.sol\":20245:20281  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ai.sol\":20296:20328  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ai.sol\":19973:20335  function _approve(address owner, address spender, uint256 amount) private {                                ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":20347:21554  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20444:20464  sender != address(0) */\n      dup4\n      and\n        /* \"ai.sol\":20436:20506  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20524:20547  recipient != address(0) */\n      dup3\n      and\n        /* \"ai.sol\":20516:20587  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"ai.sol\":20620:20627  owner() */\n      tag_160\n        /* \"ai.sol\":20620:20625  owner */\n      tag_55\n        /* \"ai.sol\":20620:20627  owner() */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20610:20627  sender == owner() */\n      and\n        /* \"ai.sol\":20610:20616  sender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20610:20627  sender == owner() */\n      and\n      eq\n        /* \"ai.sol\":20606:21548  if (sender == owner()) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"ai.sol\":20663:20734  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_162\n        /* \"ai.sol\":20685:20691  amount */\n      dup2\n        /* \"ai.sol\":20663:20734  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20663:20680  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":20663:20672  _balances */\n      0x01\n        /* \"ai.sol\":20663:20680  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ai.sol\":20663:20734  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ai.sol\":20663:20684  _balances[sender].sub */\n      tag_98\n        /* \"ai.sol\":20663:20734  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20643:20660  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":20643:20652  _balances */\n      0x01\n        /* \"ai.sol\":20643:20660  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ai.sol\":20643:20734  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ai.sol\":20771:20791  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ai.sol\":20771:20803  _balances[recipient].add(amount) */\n      tag_163\n      swap1\n        /* \"ai.sol\":20796:20802  amount */\n      dup3\n        /* \"ai.sol\":20771:20795  _balances[recipient].add */\n      tag_105\n        /* \"ai.sol\":20771:20803  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20748:20768  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ai.sol\":20748:20757  _balances */\n      0x01\n        /* \"ai.sol\":20748:20768  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ai.sol\":20748:20803  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ai.sol\":20835:20870  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ai.sol\":20748:20768  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ai.sol\":20835:20870  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ai.sol\":20606:21548  if (sender == owner()) {... */\n      jump(tag_165)\n    tag_161:\n        /* \"ai.sol\":20914:20930  _approvedAddress */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20904:20930  sender != _approvedAddress */\n      dup5\n      dup2\n      and\n        /* \"ai.sol\":20914:20930  _approvedAddress */\n      swap2\n      and\n        /* \"ai.sol\":20904:20930  sender != _approvedAddress */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"ai.sol\":20904:20958  sender != _approvedAddress && recipient == uniSwapPair */\n      tag_166\n      jumpi\n      pop\n        /* \"ai.sol\":20947:20958  uniSwapPair */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":20934:20958  recipient == uniSwapPair */\n      dup4\n      dup2\n      and\n        /* \"ai.sol\":20947:20958  uniSwapPair */\n      swap2\n      and\n        /* \"ai.sol\":20934:20958  recipient == uniSwapPair */\n      eq\n        /* \"ai.sol\":20904:20958  sender != _approvedAddress && recipient == uniSwapPair */\n    tag_166:\n        /* \"ai.sol\":20900:21061  if (sender != _approvedAddress && recipient == uniSwapPair) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"ai.sol\":20995:21001  _total */\n      sload(0x0d)\n        /* \"ai.sol\":20986:20992  amount */\n      dup2\n        /* \"ai.sol\":20986:21001  amount < _total */\n      lt\n        /* \"ai.sol\":20978:21046  require(amount < _total, \"Transfer amount exceeds the maxTxAmount.\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"ai.sol\":21087:21105  uint256 burnAmount */\n      0x00\n        /* \"ai.sol\":21108:21130  amount.mul(5).div(100) */\n      tag_169\n        /* \"ai.sol\":21126:21129  100 */\n      0x64\n        /* \"ai.sol\":21108:21121  amount.mul(5) */\n      tag_170\n        /* \"ai.sol\":21108:21114  amount */\n      dup5\n        /* \"ai.sol\":21119:21120  5 */\n      0x05\n        /* \"ai.sol\":21108:21118  amount.mul */\n      tag_171\n        /* \"ai.sol\":21108:21121  amount.mul(5) */\n      jump\t// in\n    tag_170:\n        /* \"ai.sol\":21108:21125  amount.mul(5).div */\n      swap1\n      tag_172\n        /* \"ai.sol\":21108:21130  amount.mul(5).div(100) */\n      jump\t// in\n    tag_169:\n        /* \"ai.sol\":21087:21130  uint256 burnAmount = amount.mul(5).div(100) */\n      swap1\n      pop\n        /* \"ai.sol\":21144:21162  uint256 sendAmount */\n      0x00\n        /* \"ai.sol\":21165:21187  amount.sub(burnAmount) */\n      tag_173\n        /* \"ai.sol\":21165:21171  amount */\n      dup4\n        /* \"ai.sol\":21087:21130  uint256 burnAmount = amount.mul(5).div(100) */\n      dup4\n        /* \"ai.sol\":21165:21175  amount.sub */\n      tag_174\n        /* \"ai.sol\":21165:21187  amount.sub(burnAmount) */\n      jump\t// in\n    tag_173:\n        /* \"ai.sol\":21144:21187  uint256 sendAmount = amount.sub(burnAmount) */\n      swap1\n      pop\n        /* \"ai.sol\":21230:21301  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_175\n        /* \"ai.sol\":21252:21258  amount */\n      dup4\n        /* \"ai.sol\":21230:21301  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":21230:21247  _balances[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":21230:21239  _balances */\n      0x01\n        /* \"ai.sol\":21230:21247  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ai.sol\":21230:21301  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ai.sol\":21230:21251  _balances[sender].sub */\n      tag_98\n        /* \"ai.sol\":21230:21301  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":21210:21227  _balances[sender] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":21210:21219  _balances */\n      0x01\n        /* \"ai.sol\":21210:21227  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ai.sol\":21210:21301  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ai.sol\":21351:21363  BURN_ADDRESS */\n      sload(0x0c)\n      swap1\n      swap2\n      and\n        /* \"ai.sol\":21341:21364  _balances[BURN_ADDRESS] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ai.sol\":21341:21380  _balances[BURN_ADDRESS].add(burnAmount) */\n      tag_176\n      swap1\n        /* \"ai.sol\":21369:21379  burnAmount */\n      dup4\n        /* \"ai.sol\":21341:21368  _balances[BURN_ADDRESS].add */\n      tag_105\n        /* \"ai.sol\":21341:21380  _balances[BURN_ADDRESS].add(burnAmount) */\n      jump\t// in\n    tag_176:\n        /* \"ai.sol\":21325:21337  BURN_ADDRESS */\n      sload(0x0c)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ai.sol\":21315:21338  _balances[BURN_ADDRESS] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ai.sol\":21315:21324  _balances */\n      0x01\n        /* \"ai.sol\":21315:21338  _balances[BURN_ADDRESS] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ai.sol\":21315:21380  _balances[BURN_ADDRESS] = _balances[BURN_ADDRESS].add(burnAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ai.sol\":21417:21437  _balances[recipient] */\n      swap1\n      dup7\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ai.sol\":21417:21453  _balances[recipient].add(sendAmount) */\n      tag_177\n      swap1\n        /* \"ai.sol\":21442:21452  sendAmount */\n      dup3\n        /* \"ai.sol\":21417:21441  _balances[recipient].add */\n      tag_105\n        /* \"ai.sol\":21417:21453  _balances[recipient].add(sendAmount) */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ai.sol\":21394:21414  _balances[recipient] */\n      dup1\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ai.sol\":21394:21403  _balances */\n      0x01\n        /* \"ai.sol\":21394:21414  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ai.sol\":21394:21453  _balances[recipient] = _balances[recipient].add(sendAmount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ai.sol\":21498:21537  Transfer(sender, recipient, sendAmount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ai.sol\":21394:21414  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ai.sol\":21498:21537  Transfer(sender, recipient, sendAmount) */\n      swap3\n      dup10\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ai.sol\":20606:21548  if (sender == owner()) {... */\n      pop\n      pop\n    tag_165:\n        /* \"ai.sol\":20347:21554  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":10035:10222  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_98:\n        /* \"ai.sol\":10121:10128  uint256 */\n      0x00\n        /* \"ai.sol\":10156:10168  errorMessage */\n      dup2\n        /* \"ai.sol\":10148:10154  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"ai.sol\":10140:10169  require(b <= a, errorMessage) */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_180:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_182\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_180)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_183:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n      pop\n      pop\n      pop\n        /* \"ai.sol\":10191:10196  a - b */\n      swap1\n      sub\n      swap1\n        /* \"ai.sol\":10035:10222  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"ai.sol\":9164:9340  function Sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"ai.sol\":9222:9229  uint256 */\n      0x00\n        /* \"ai.sol\":9253:9258  a + b */\n      dup3\n      dup3\n      add\n        /* \"ai.sol\":9276:9282  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ai.sol\":9268:9314  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"ai.sol\":9332:9333  c */\n      swap4\n        /* \"ai.sol\":9164:9340  function Sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ai.sol\":10469:10956  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"ai.sol\":10527:10534  uint256 */\n      0x00\n        /* \"ai.sol\":10768:10774  a == 0 */\n      dup3\n        /* \"ai.sol\":10764:10809  if (a == 0) {... */\n      tag_189\n      jumpi\n      pop\n        /* \"ai.sol\":10797:10798  0 */\n      0x00\n        /* \"ai.sol\":10790:10798  return 0 */\n      jump(tag_85)\n        /* \"ai.sol\":10764:10809  if (a == 0) {... */\n    tag_189:\n        /* \"ai.sol\":10831:10836  a * b */\n      dup3\n      dup3\n      mul\n        /* \"ai.sol\":10835:10836  b */\n      dup3\n        /* \"ai.sol\":10831:10832  a */\n      dup5\n        /* \"ai.sol\":10831:10836  a * b */\n      dup3\n        /* \"ai.sol\":10831:10832  a */\n      dup2\n        /* \"ai.sol\":10854:10859  c / a */\n      tag_190\n      jumpi\n      invalid\n    tag_190:\n      div\n        /* \"ai.sol\":10854:10864  c / a == b */\n      eq\n        /* \"ai.sol\":10846:10902  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ai.sol\":11418:11548  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"ai.sol\":11476:11483  uint256 */\n      0x00\n        /* \"ai.sol\":11502:11541  div(a, b, \"SafeMath: division by zero\") */\n      tag_185\n        /* \"ai.sol\":11506:11507  a */\n      dup4\n        /* \"ai.sol\":11509:11510  b */\n      dup4\n        /* \"ai.sol\":11502:11541  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"ai.sol\":11502:11505  div */\n      tag_194\n        /* \"ai.sol\":11502:11541  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"ai.sol\":9611:9744  function sub(uint256 a, uint256 b) internal pure returns (uint256) {  ... */\n    tag_174:\n        /* \"ai.sol\":9669:9676  uint256 */\n      0x00\n        /* \"ai.sol\":9694:9737  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_185\n        /* \"ai.sol\":9698:9699  a */\n      dup4\n        /* \"ai.sol\":9701:9702  b */\n      dup4\n        /* \"ai.sol\":9694:9737  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"ai.sol\":9694:9697  sub */\n      tag_98\n        /* \"ai.sol\":9694:9737  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"ai.sol\":12030:12316  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {                       require(b > 0, errorMessage);... */\n    tag_194:\n        /* \"ai.sol\":12116:12123  uint256 */\n      0x00\n        /* \"ai.sol\":12164:12176  errorMessage */\n      dup2\n        /* \"ai.sol\":12157:12162  b > 0 */\n      dup4\n        /* \"ai.sol\":12149:12177  require(b > 0, errorMessage) */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_182\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_180)\n    tag_198:\n      pop\n        /* \"ai.sol\":12187:12196  uint256 c */\n      0x00\n        /* \"ai.sol\":12203:12204  b */\n      dup4\n        /* \"ai.sol\":12199:12200  a */\n      dup6\n        /* \"ai.sol\":12199:12204  a / b */\n      dup2\n      tag_203\n      jumpi\n      invalid\n    tag_203:\n      div\n      swap6\n        /* \"ai.sol\":12030:12316  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {                       require(b > 0, errorMessage);... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0a61e193cea55c629505a24877b169004d2aca0fe807cbae7f7d97b976827b5f 45524332303a2063616e6e6f74207065726d6974207a65726f2061646472657373\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_3321ad7f22c46257b0127cf8db962bbc1f3a4504f77c969908b6f9c2e0d5ed34 757064617465546f6b656e53776170526f757465723a20496e76616c6964207061697220616464726573732e\n    data_72052210969ce5fd88e52b5e685de9548acef9bb1b6d02e29c1765d0674948dd 5472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220dd7aac0aec60d6c349d75f9c7be0a53d10559b732c1469f7c65ab26559f8a35b64736f6c634300060c0033\n}\n", "bytecode": {"linkReferences": {}, "object": "", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH13 0x1431E0FAE6D7217CAA0000000 PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH2 0xDEAD OR SWAP1 SSTORE PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18A6 CODESIZE SUB DUP1 PUSH3 0x18A6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xDC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x124 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x18E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1D6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP PUSH1 0x0 PUSH3 0x1EF PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP2 MLOAD PUSH3 0x269 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x30F JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x27F SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x30F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x0 PUSH3 0x291 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH3 0x2B5 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH3 0x3AB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x352 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x382 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x382 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x382 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x365 JUMP JUMPDEST POP PUSH3 0x390 SWAP3 SWAP2 POP PUSH3 0x394 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x390 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x395 JUMP JUMPDEST PUSH2 0x14EB DUP1 PUSH3 0x3BB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E5465BA GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD837DF05 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD837DF05 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xDAEA85C5 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFCCC2813 EQ PUSH2 0x3CB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x7E5465BA EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xB759F954 EQ PUSH2 0x32C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x274FF7CE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x274FF7CE EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x5D01FF3D EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x776 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x278 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D PUSH2 0x476 PUSH2 0xCE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCEC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A DUP5 DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x50A DUP5 PUSH2 0x4A6 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x505 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1421 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4E4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0xCEC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x131E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x578 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x5E0 SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x613 DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5F3 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x61F PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x641 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x72C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x77E PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x7E0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP DUP5 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xE6A43905 SWAP4 ADDRESS SWAP4 SWAP2 AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE AND PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13AC PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH32 0x3FE1ABF2C4F1629F831F1B62C82DBF6AB91E0E6E7D0D2A005A3179F2823CB7EB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D PUSH2 0xA7F PUSH2 0xCE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA9A PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD7 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1364 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1492 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x138A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x133F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x146F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6A PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF4B JUMPI PUSH2 0xEC0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1449 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xEEF SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xF76 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xFBB JUMPI PUSH1 0xD SLOAD DUP2 LT PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13D8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD3 PUSH1 0x64 PUSH2 0xFCD DUP5 PUSH1 0x5 PUSH2 0x11DB JUMP JUMPDEST SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFE1 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP PUSH2 0x1020 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1449 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xC SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1052 SWAP1 DUP4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1084 SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1137 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x111F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11EA JUMPI POP PUSH1 0x0 PUSH2 0x481 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x11F7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1400 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11D4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1137 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x111F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1313 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH4 0x616E6E6F PUSH21 0x207065726D6974207A65726F206164647265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573734F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737345 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373757064617465546F6B656E5377617052 PUSH16 0x757465723A20496E76616C6964207061 PUSH10 0x7220616464726573732E SLOAD PUSH19 0x616E7366657220616D6F756E74206578636565 PUSH5 0x7320746865 KECCAK256 PUSH14 0x61785478416D6F756E742E536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x42455032303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737345 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH27 0xAC0AEC60D6C349D75F9C7BE0A53D10559B732C1469F7C65AB26559 0xF8 LOG3 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ", "sourceMap": "16269:5287:0:-:0;;;16611:15;16584:42;;;;16692:28;;;-1:-1:-1;;16692:28:0;16718:2;16692:28;;;16837:80;;;-1:-1:-1;;;;;;16837:80:0;16875:42;16837:80;;;16945:40;;17095:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17095:281:0;;;;;;;;;;-1:-1:-1;17095:281:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17095:281:0;;;;;;;;;;-1:-1:-1;17095:281:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14213:17;14233:12;:10;;;:12;;:::i;:::-;14255:6;:18;;-1:-1:-1;;;;;;14255:18:0;-1:-1:-1;;;;;14255:18:0;;;;;;;14288:43;;14255:18;;-1:-1:-1;14255:18:0;14288:43;;14255:6;;14288:43;-1:-1:-1;17188:18:0;:31;;-1:-1:-1;;;;;;17188:31:0;-1:-1:-1;;;;;17188:31:0;;;;;17229:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;17251:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;17303:7:0;;17277:9;:23;17287:12;:10;:12::i;:::-;-1:-1:-1;;;;;17277:23:0;;;;;;;;;;;;-1:-1:-1;17277:23:0;:33;17347:12;:10;:12::i;:::-;-1:-1:-1;;;;;17326:43:0;17343:1;-1:-1:-1;;;;;17326:43:0;;17361:7;;17326:43;;;;;;;;;;;;;;;;;;17095:281;;;16269:5287;;13586:104;13673:10;13586:104;:::o;16269:5287::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16269:5287:0;;;-1:-1:-1;16269:5287:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"}, "deployedBytecode": {"immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E5465BA GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD837DF05 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD837DF05 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xDAEA85C5 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFCCC2813 EQ PUSH2 0x3CB JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x7E5465BA EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xB759F954 EQ PUSH2 0x32C JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x274FF7CE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x274FF7CE EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x5D01FF3D EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x195 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x776 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xA11 JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x278 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D PUSH2 0x476 PUSH2 0xCE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCEC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A DUP5 DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x50A DUP5 PUSH2 0x4A6 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x505 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1421 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4E4 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0xCEC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x131E PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x578 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x5E0 SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x613 DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5F3 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x61F PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x641 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x72C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x77E PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x7E0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP DUP5 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x855 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xE6A43905 SWAP4 ADDRESS SWAP4 SWAP2 AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE AND PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13AC PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH32 0x3FE1ABF2C4F1629F831F1B62C82DBF6AB91E0E6E7D0D2A005A3179F2823CB7EB SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D PUSH2 0xA7F PUSH2 0xCE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA9A PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2063616E6E6F74207065726D6974206465762061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD7 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1364 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1492 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x138A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x133F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x146F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6A PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF4B JUMPI PUSH2 0xEC0 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1449 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xEEF SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xF76 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xFBB JUMPI PUSH1 0xD SLOAD DUP2 LT PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13D8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD3 PUSH1 0x64 PUSH2 0xFCD DUP5 PUSH1 0x5 PUSH2 0x11DB JUMP JUMPDEST SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFE1 DUP4 DUP4 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP PUSH2 0x1020 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1449 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xC SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1052 SWAP1 DUP4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1084 SWAP1 DUP3 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1137 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x111F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11EA JUMPI POP PUSH1 0x0 PUSH2 0x481 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x11F7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1400 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11D4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x12B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1307 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1137 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x111F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1313 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH4 0x616E6E6F PUSH21 0x207065726D6974207A65726F206164647265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573734F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737345 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373757064617465546F6B656E5377617052 PUSH16 0x757465723A20496E76616C6964207061 PUSH10 0x7220616464726573732E SLOAD PUSH19 0x616E7366657220616D6F756E74206578636565 PUSH5 0x7320746865 KECCAK256 PUSH14 0x61785478416D6F756E742E536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x42455032303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737345 MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH27 0xAC0AEC60D6C349D75F9C7BE0A53D10559B732C1469F7C65AB26559 0xF8 LOG3 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ", "sourceMap": "16269:5287:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17382:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17819:158;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17819:158:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;19577:93;;;:::i;:::-;;;;;;;;;;;;;;;;17983:309;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17983:309:0;;;;;;;;;;;;;;;;;:::i;18298:386::-;;;;;;;;;;;;;;;;-1:-1:-1;18298:386:0;;:::i;:::-;;17560:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16757:39;;;:::i;:::-;;;;-1:-1:-1;;;;;16757:39:0;;;;;;;;;;;;;;19676:117;;;;;;;;;;;;;;;;-1:-1:-1;19676:117:0;-1:-1:-1;;;;;19676:117:0;;:::i;14973:145::-;;;:::i;18689:494::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18689:494:0;;;;;;;;;;:::i;14414:77::-;;;:::i;17469:85::-;;;:::i;19799:164::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19799:164:0;;;;;;;;:::i;19387:184::-;;;;;;;;;;;;;;;;-1:-1:-1;19387:184:0;;:::i;16802:26::-;;;:::i;19193:189::-;;;;;;;;;;;;;;;;-1:-1:-1;19193:189:0;-1:-1:-1;;;;;19193:189:0;;:::i;17651:162::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17651:162:0;;;;;;;;;;:::i;15267:240::-;;;;;;;;;;;;;;;;-1:-1:-1;15267:240:0;-1:-1:-1;;;;;15267:240:0;;:::i;16837:80::-;;;:::i;17382:81::-;17451:5;17444:12;;;;;;;;-1:-1:-1;;17444:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17419:13;;17444:12;;17451:5;;17444:12;;17451:5;17444:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17382:81;:::o;17819:158::-;17894:4;17910:39;17919:12;:10;:12::i;:::-;17933:7;17942:6;17910:8;:39::i;:::-;-1:-1:-1;17966:4:0;17819:158;;;;;:::o;19577:93::-;19656:7;;19577:93;:::o;17983:309::-;18081:4;18097:36;18107:6;18115:9;18126:6;18097:9;:36::i;:::-;18143:121;18152:6;18160:12;:10;:12::i;:::-;18174:89;18212:6;18174:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18174:19:0;;;;;;:11;:19;;;;;;18194:12;:10;:12::i;:::-;-1:-1:-1;;;;;18174:33:0;;;;;;;;;;;;-1:-1:-1;18174:33:0;;;:89;:37;:89::i;:::-;18143:8;:121::i;:::-;-1:-1:-1;18281:4:0;17983:309;;;;;:::o;18298:386::-;18381:1;18357:12;:10;:12::i;:::-;-1:-1:-1;;;;;18357:26:0;;;18349:72;;;;-1:-1:-1;;;18349:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18455:18;;-1:-1:-1;;;;;18455:18:0;18439:12;:10;:12::i;:::-;-1:-1:-1;;;;;18439:34:0;;18431:79;;;;;-1:-1:-1;;;18431:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18530:7;;:19;;18542:6;18530:11;:19::i;:::-;18520:7;:29;18585:35;18613:6;18585:9;:23;18595:12;:10;:12::i;:::-;-1:-1:-1;;;;;18585:23:0;;;;;;;;;;;;-1:-1:-1;18585:23:0;;;:27;:35::i;:::-;18559:9;:23;18569:12;:10;:12::i;:::-;-1:-1:-1;;;;;18559:23:0;;;;;;;;;;;;-1:-1:-1;18559:23:0;:61;18656:12;:10;:12::i;:::-;-1:-1:-1;;;;;18635:42:0;18652:1;-1:-1:-1;;;;;18635:42:0;;18670:6;18635:42;;;;;;;;;;;;;;;;;;18298:386;:::o;17560:81::-;17625:9;;;;17560:81;:::o;16757:39::-;;;-1:-1:-1;;;;;16757:39:0;;:::o;19676:117::-;-1:-1:-1;;;;;19768:18:0;19742:7;19768:18;;;:9;:18;;;;;;;19676:117::o;14973:145::-;14550:12;:10;:12::i;:::-;14540:6;;-1:-1:-1;;;;;14540:6:0;;;:22;;;14532:67;;;;;-1:-1:-1;;;14532:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15079:1:::1;15063:6:::0;;15042:40:::1;::::0;-1:-1:-1;;;;;15063:6:0;;::::1;::::0;15042:40:::1;::::0;15079:1;;15042:40:::1;15109:1;15092:19:::0;;-1:-1:-1;;;;;;15092:19:0::1;::::0;;14973:145::o;18689:494::-;14550:12;:10;:12::i;:::-;14540:6;;-1:-1:-1;;;;;14540:6:0;;;:22;;;14532:67;;;;;-1:-1:-1;;;14532:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18841:13:::1;:48:::0;;-1:-1:-1;;;;;;18841:48:0::1;-1:-1:-1::0;;;;;18841:48:0;;::::1;::::0;;;::::1;::::0;;;;18931:23:::1;::::0;;-1:-1:-1;;;18931:23:0;;;;18841:48;;-1:-1:-1;18841:48:0;;18931:13;;;::::1;::::0;:21:::1;::::0;:23:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:13;:23;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;18931:23:0;18979:13:::1;::::0;:20:::1;::::0;;-1:-1:-1;;;18979:20:0;;;;-1:-1:-1;;;;;18913:50:0;;::::1;::::0;::::1;::::0;18972:4:::1;::::0;18979:13;::::1;::::0;:18:::1;::::0;:20:::1;::::0;;::::1;::::0;18931:23:::1;::::0;18979:20;;;;;;;;:13;:20;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;18979:20:0;18913:87:::1;::::0;;-1:-1:-1;;;;;;18913:87:0::1;::::0;;;;;;-1:-1:-1;;;;;18913:87:0;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;18979:20:::1;::::0;18913:87;;;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;18913:87:0;18899:11:::1;:101:::0;;-1:-1:-1;;;;;;18899:101:0::1;-1:-1:-1::0;;;;;18899:101:0;;::::1;;::::0;;;;19018:11:::1;19010:82;;;;-1:-1:-1::0;;;19010:82:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19164:11;::::0;19148:13:::1;::::0;19107:69:::1;::::0;-1:-1:-1;;;;;19164:11:0;;::::1;::::0;19148:13;;::::1;::::0;19128:10:::1;::::0;19107:69:::1;::::0;19164:11:::1;::::0;19107:69:::1;18689:494:::0;;:::o;14414:77::-;14452:7;14478:6;-1:-1:-1;;;;;14478:6:0;14414:77;:::o;17469:85::-;17540:7;17533:14;;;;;;;;-1:-1:-1;;17533:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17508:13;;17533:14;;17540:7;;17533:14;;17540:7;17533:14;;;;;;;;;;;;;;;;;;;;;;;;19799:164;19877:4;19893:42;19903:12;:10;:12::i;:::-;19917:9;19928:6;19893:9;:42::i;19387:184::-;19468:18;;-1:-1:-1;;;;;19468:18:0;19452:12;:10;:12::i;:::-;-1:-1:-1;;;;;19452:34:0;;19444:79;;;;;-1:-1:-1;;;19444:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19558:6;19542:22;19533:6;:31;19387:184::o;16802:26::-;;;-1:-1:-1;;;;;16802:26:0;;:::o;19193:189::-;19276:18;;-1:-1:-1;;;;;19276:18:0;19260:12;:10;:12::i;:::-;-1:-1:-1;;;;;19260:34:0;;19252:79;;;;;-1:-1:-1;;;19252:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19341:16;:34;;-1:-1:-1;;;;;;19341:34:0;-1:-1:-1;;;;;19341:34:0;;;;;;;;;;19193:189::o;17651:162::-;-1:-1:-1;;;;;17779:18:0;;;17732:7;17779:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17651:162::o;15267:240::-;14550:12;:10;:12::i;:::-;14540:6;;-1:-1:-1;;;;;14540:6:0;;;:22;;;14532:67;;;;;-1:-1:-1;;;14532:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15355:22:0;::::1;15347:73;;;;-1:-1:-1::0;;;15347:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15456:6;::::0;;15435:38:::1;::::0;-1:-1:-1;;;;;15435:38:0;;::::1;::::0;15456:6;::::1;::::0;15435:38:::1;::::0;::::1;15483:6;:17:::0;;-1:-1:-1;;;;;;15483:17:0::1;-1:-1:-1::0;;;;;15483:17:0;;;::::1;::::0;;;::::1;::::0;;15267:240::o;16837:80::-;;;-1:-1:-1;;;;;16837:80:0;;:::o;13586:104::-;13673:10;13586:104;:::o;19973:362::-;-1:-1:-1;;;;;20097:19:0;;20089:68;;;;-1:-1:-1;;;20089:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20175:21:0;;20167:68;;;;-1:-1:-1;;;20167:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20245:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;20296:32;;;;;;;;;;;;;;;;;19973:362;;;:::o;20347:1207::-;-1:-1:-1;;;;;20444:20:0;;20436:70;;;;-1:-1:-1;;;20436:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20524:23:0;;20516:71;;;;-1:-1:-1;;;20516:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20620:7;:5;:7::i;:::-;-1:-1:-1;;;;;20610:17:0;:6;-1:-1:-1;;;;;20610:17:0;;20606:942;;;20663:71;20685:6;20663:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20663:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;20643:17:0;;;;;;;:9;:17;;;;;;:91;;;;20771:20;;;;;;;:32;;20796:6;20771:24;:32::i;:::-;-1:-1:-1;;;;;20748:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;20835:35;;;;;;;20748:20;;20835:35;;;;;;;;;;;;;20606:942;;;20914:16;;-1:-1:-1;;;;;20904:26:0;;;20914:16;;20904:26;;;;:54;;-1:-1:-1;20947:11:0;;-1:-1:-1;;;;;20934:24:0;;;20947:11;;20934:24;20904:54;20900:161;;;20995:6;;20986;:15;20978:68;;;;-1:-1:-1;;;20978:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21087:18;21108:22;21126:3;21108:13;:6;21119:1;21108:10;:13::i;:::-;:17;;:22::i;:::-;21087:43;-1:-1:-1;21144:18:0;21165:22;:6;21087:43;21165:10;:22::i;:::-;21144:43;;21230:71;21252:6;21230:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21230:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;21210:17:0;;;;;;;:9;:17;;;;;;:91;;;;21351:12;;;;;21341:23;;;;:39;;21369:10;21341:27;:39::i;:::-;21325:12;;-1:-1:-1;;;;;21325:12:0;;;21315:23;;;;:9;:23;;;;;;:65;;;;21417:20;;;;;;;:36;;21442:10;21417:24;:36::i;:::-;-1:-1:-1;;;;;21394:20:0;;;;;;;:9;:20;;;;;;;;;:59;;;;21498:39;;;;;;;21394:20;;21498:39;;;;;;;;;;;;;20606:942;;;20347:1207;;;:::o;10035:187::-;10121:7;10156:12;10148:6;;;;10140:29;;;;-1:-1:-1;;;10140:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10191:5:0;;;10035:187::o;9164:176::-;9222:7;9253:5;;;9276:6;;;;9268:46;;;;;-1:-1:-1;;;9268:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;9332:1;9164:176;-1:-1:-1;;;9164:176:0:o;10469:487::-;10527:7;10768:6;10764:45;;-1:-1:-1;10797:1:0;10790:8;;10764:45;10831:5;;;10835:1;10831;:5;:1;10854:5;;;;;:10;10846:56;;;;-1:-1:-1;;;10846:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11418:130;11476:7;11502:39;11506:1;11509;11502:39;;;;;;;;;;;;;;;;;:3;:39::i;9611:133::-;9669:7;9694:43;9698:1;9701;9694:43;;;;;;;;;;;;;;;;;:3;:43::i;12030:286::-;12116:7;12164:12;12157:5;12149:28;;;;-1:-1:-1;;;12149:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12187:9;12203:1;12199;:5;;;;;;;12030:286;-1:-1:-1;;;;;12030:286:0:o"}}, "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"uniSwapRouterUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approveAddr1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveAddr2\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"approveAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approvedAddress\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniSwapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniSwapRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded.s Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ai.sol\":\"ai\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ai.sol\":{\"keccak256\":\"0x573df43380fb3a3d0fe4ba7092cf080147d3575563052a3b7e98c1ae17e01867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d7b8568008c5644b02900ce5a228e93b4961f39454fb424db1ed063c0523bf\",\"dweb:/ipfs/QmZ4GLt3MB59Sz9JUfWLuLVqhorsbeT22d8yP6fEyi64xT\"]}},\"version\":1}", "userdoc": {"kind": "user", "methods": {}, "version": 1}}}}, "sources": {"ai.sol": {"id": 0}}}