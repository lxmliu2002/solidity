{
    "language": "Solidity",
    "sources": {
        "A.sol": {
            "content": "// SPDX-License-Identifier: MIT \n pragma solidity ^0.8.0; \n import { B } from \"./B.sol\"; \n contract A { \n uint public aData; \n B public bContract; \n constructor(uint _aData, uint _bData, uint _cData) { \n aData = _aData; \n bContract = new B(_bData, _cData); \n } \n } \n "
        },
        "B.sol": {
            "content": "// SPDX-License-Identifier: MIT \n pragma solidity ^0.8.0; \n import { C } from \"./C.sol\"; \n contract B { \n uint public bData; \n C public cContract; \n constructor(uint _bData, uint _cData) { \n bData = _bData; \n cContract = new C(_cData); \n } \n } \n "
        },
        "C.sol": {
            "content": "// SPDX-License-Identifier: MIT \n pragma solidity ^0.8.0; \n contract C { \n uint public cData; \n constructor(uint _cData) { \n cData = _cData; \n } \n } \n "
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "": [
                    "ast"
                ],
                "*": [
                    "abi",
                    "metadata",
                    "devdoc",
                    "userdoc",
                    "storageLayout",
                    "evm.legacyAssembly",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers",
                    "evm.gasEstimates",
                    "evm.assembly"
                ]
            }
        }
    }
}